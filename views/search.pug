extends layout
block head
  script(src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.18.0/axios.js")
  script.
    window.onload = function(){ // when loads this will be called
      Vue.use("Vuetify");
      new Vue({ 
        el: '#app',
        data: function(){
            return {
              Date: new Date().toLocaleString().substr(0, 10),
              mealTypes: ['Breakfast','Lunch','Dinner','Snack'], // the options for meals
              items: [], // foods selected
              noResult: false, // error when searching?
              summary: { //total nutrition info
                'calories':0,
                'fat':0,
                'protein':0,
                'carbohydrates':0
              },
              searchTerm:"", // variable gunna search the api with
              pag:{}, // for pagination
              results: [],
              headers: [
                {text:"name", value:"name"},
                {text:"action", value:""}
              ],
            }
        }, 
        computed: {
            totalCalories: function(){ // just calculates the total calories and other info
              var calories = 0;
              for(var item of this.items){
                calories += item.calories;
              }
              return calories;
            },
            totalFat: function(){
              var fat = 0;
              for(var item of this.items){
                fat += item.fat;
              }
              return fat;
            },
            totalProtein: function(){
              var protein = 0;
              for(var item of this.items){
                protein += item.protein;
              }
              return protein;
            },
            totalCarbohydrates: function(){
              var carbs = 0;
              for(var item of this.items){
                carbs += item.carbohydrate;
              }
              return carbs;
            }
        },
        methods:{
          clear:function(){ // clears the array called items or items selected
            console.log("clear method called")
            this.items=[];
            this.results = [];
            this.searchTerm = [];
          },
          increment:function(){ // increment page in pagination
            this.pag.page++;
          },
          decrement:function(){
            if(this.pag.page > 1){
              this.pag.page--;
            }
          },
          onSearch:function(){ // search for foods of that name and sets the returned array of JSON objects to results 
            console.log("searching for " + this.searchTerm)
            axios.get("/api/food?search=" + this.searchTerm)
              .then((response)=>{
                if(response.data.list != undefined){//truthy if is defined// THIS DOES NOT WORK!!!
                  this.results= response.data.list.item;
                  this.noResult = false;
                }else{
                  this.noResult = true;
                }
              })
              .catch(function(err){
                console.log(err);
              });
          },
          onSelect(item){ // select an item and add it to items
            console.log(JSON.stringify(item));

            //have now added it to the items array
            axios.get("/api/food/" + item.ndbno)
              .then((response)=>{
                console.log(response);
                var food = response.data.foods[0].food;
                var item = {
                  "nbdno": food.desc.ndbno,
                  "name": food.desc.name
                };
                console.log(food.nutrients);
                for(var nutrient of food.nutrients){
                  console.log(nutrient.name);
                  switch(nutrient.name){//passing in variable
                    case 'Protein':// kinda like an if
                      item.protein=  Math.round( parseFloat(nutrient.value));//rounds
                      break;
                    case 'Total lipid (fat)':
                      item.fat= Math.round( parseFloat(nutrient.value));//rounds
                      break;
                    case 'Carbohydrate, by difference':
                      item.carbohydrate= Math.round( parseFloat(nutrient.value));//rounds
                      break;
                    case 'Energy':
                      item.calories= Math.round( parseFloat(nutrient.value));//rounds
                      break;
                    default://do nothing
                      break;
                  }
                }
                

                this.items.push(item);
                
              })
              .catch(function(err){
                console.log(err);
              });

          }
        }
      });
    }
block content
  h1 Log Your Food
  v-container(grid-list-md='',text-xs-center='')
    v-layout(row,wrap)
      v-flex.cyan.lighten-4(xs9)
        h1 Search
        v-form
          v-container
            //- this is basically that search for food part of the form
            v-text-field(solo v-model="searchTerm" label='Food Name' append-icon='search')
            v-btn(v-on:click="onSearch") Search
            v-btn(v-on:click="increment") Next Page
            v-btn(v-on:click="decrement") Previous Page
            //-after search shows results here
            h1 Search Results
            v-alert(v-model='noResult' type="error") No Results... Check Input
            v-data-table(:headers="headers" :items="results" :pagination.sync="pag")
              template(slot="items" slot-scope="props")
                td {{props.item.name}}
                td
                  v-btn(v-on:click="onSelect(props.item)") Select
      v-divider  
      v-flex.grey.lighten-2(xs3)
        h1 List of Items
        br
        v-select(:items='mealTypes', label='Meal Type' solo)
        //- select the meal type with a selector
        v-container
          table
            thead
              tr
                th  Item Name        
                th
                  v-btn(v-on:click="clear()"  color='light-blue accent-1') Clear
            tr(v-for='item in items')
              td {{item.name}}    
                v-divider
        v-divider 
        v-container
          h1 Summary
          v-container
            p # items: {{items.length}}
            p Calories: {{totalCalories}} kcal
            p Fat: {{totalFat}} g
            p Carbohydrates: {{totalCarbohydrates}} g
            p Protein: {{totalProtein}} g                    
      
    

