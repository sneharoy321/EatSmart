extends layout2
block head 
  script(src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.18.0/axios.js")
  script.
    window.onload = function(){ // when loads this will be called
      Vue.use("Vuetify");
      new Vue({
        el: '#app',
        data: () => ({
          date : new Date().toISOString().substr(0, 10),
          items: [], //
          nutritionSumVal:[],
          mealTypes:[],
          pag: {},//pagination
          headers: [
                {text:"name", value:"name"},
                {text:"calories", value:"calories"},
                {text:"protein", value:"protein"},
                {text:"fat", value:"fat"},
                {text:"carbohydrate", value:"carbohydrate"},
                {text:"potassium", value:"potassium"},
                {text:"vitaminA", value:"vitaminA"}
              ],
          
        }),
        methods:{
          //gets the history for selected date and sets it to items 
          getHistory: function(id){
            console.log('getHistory() method was called for date ' + this.date.toString());
            axios.get(`api/dietHistory?selectedDate=${this.date}&userId=${id}`)
            .then( (response)=>{//fat arrow function allows this to refer to variables outside of function
                console.log(response.data);
                this.mealTypes=[]; //clears the meal Types
                this.items = []; // clears the meal and item array thingy
                for(var i in response.data){ // 
                  this.mealTypes.push(response.data[i].mealType); // adds all meal types to an
                  var item = JSON.parse(response.data[i].items); // array of all the meal Types
                  var nutritionSum = JSON.parse(response.data[i].nutritionSum);
                  var nutritionSumItem = {
                    "name": "Total",
                    "calories": nutritionSum.calories,
                    "protein": nutritionSum.protein,
                    "fat":nutritionSum.fat,
                    "carbohydrate":nutritionSum.carbohydrates,
                    "potassium":nutritionSum.potassium,
                    "vitaminA":nutritionSum.vitaminA
                  };//adds meal nutrition Summary as last element in the inner aray
                  item.push(nutritionSumItem);
                  this.items.push(item);
                }
                
                console.log(this.nutritionSumVal);
                console.log(this.mealTypes);

                console.log(this.items);//outputs the result as an array of JSON objects
              }) 
              .catch(function(err){
                console.log(err);
              });//do it now for nutrition summanry
          }
        },
        
      })
    }
    
block content
  if(user)
    h1.display-3.text-xs-center.front-weight-bold= title
    h2.display-1.text-xs-center Please Select a Date 
    br
    v-card
      v-date-picker.mt-3(v-model='date', full-width='', color='indigo lighten-2' :max='new Date().toISOString().substr(0, 10)')
      v-layout
        v-flex(xs12 text-xs-center='')
          v-btn(color='lime' v-on:click=`getHistory(${user.id})`).text-xs-center Submit {{date}}
  br
  br
  //-so basically each element in item represents one meal item[]
  //- this is a for loop
  template(v-for="(meal, index) in items")
    h1 {{mealTypes[index]}}
    v-data-table(:headers='headers', :items='meal')
      tr
        template(slot="items" slot-scope="props")
          td {{ props.item.name }}
          td {{ props.item.calories }}
          td {{ props.item.protein }}
          td {{ props.item.fat }}
          td {{ props.item.carbohydrate }}
          td {{ props.item.potassium}}
          td {{ props.item.vitaminA}}
    br
  br
  